{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "/Users/Mamble/Work/Bills/callImitator/http/src",
  "sources": [
    "client.ts"
  ],
  "names": [
    "Client",
    "Client.constructor",
    "Client.configure",
    "Client.initRequest",
    "Client.initResponse",
    "Client.encode",
    "Client.decode",
    "Client.onRequest",
    "Client.onSuccess",
    "Client.onFailure",
    "Client.request"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import Node from './node';\nimport Utils from './utils';\n\n\nexport class Client {\n\n    private protocol:string;\n    private host:string;\n    private port:string;\n    private path:string;\n    private headers:any;\n    private streamed:boolean;\n    private service:any;\n\n    constructor(url,headers?){\n        if(url){\n            this.configure(url,headers)\n        }\n    }\n    configure(url,headers){\n        if(typeof url == 'string'){\n            url = Node.Url.parse(url,true);\n        }\n        this.protocol   = url.protocol;\n        this.host       = url.hostname;\n        this.port       = url.port;\n        this.path       = url.pathname;\n        this.headers    = headers||{};\n        this.streamed   = false;\n        switch(url.protocol){\n            case 'http:' : this.service = Node.Http;  break;\n            case 'https:': this.service = Node.Https; break;\n            default      : throw new Error('invalid http protocol '+url.protocol)\n        }\n    }\n    initRequest(req){\n        var url = Node.Url.parse(req.url||req.path);\n        return (Utils.cleanup({\n            method   : req.method   || 'GET',\n            hostname : url.hostname || req.host     || this.host,\n            port     : url.port     || req.port     || this.port || undefined,\n            headers  : Utils.merge(this.headers,req.headers),\n            path     : Node.Path.resolve(this.path,url.path||'') + ((url.query||req.query)?'?'+Node.Qs.stringify(url.query||req.query):''),\n            content  : req.content\n        }));\n    }\n    initResponse(req, res){\n        res.streamed = req.streamed || this.streamed;\n        var contentType     = res.headers['content-type'];\n        var contentEncoding = res.headers['content-encoding'];\n        if ((\n            contentType && contentType.indexOf('application/x-gzip') >= 0) ||\n            contentEncoding && contentEncoding.indexOf('gzip') >= 0\n        ){\n            return res.pipe(Node.Zlib.createGunzip());\n        } else {\n            return res;\n        }\n    }\n\n    encode(req){\n        return req.content;\n    }\n    decode(res){\n        return res;\n    }\n\n    onRequest(req){}\n    onSuccess(req,res){}\n    onFailure(req,err){}\n\n    request(req){\n        return new Promise((resolve,reject)=> {\n            req = this.initRequest(req);\n            this.onRequest(req);\n            var request = this.service.request(req);\n            request.on('error', err=> {\n                err.request   = req;\n                this.onFailure(req,err);\n                reject(err);\n            });\n            request.on('response', res=> {\n                var response = {\n                    status  : res.statusCode,\n                    message : res.statusMessage,\n                    headers : res.headers,\n                    content : null\n                };\n                res  = this.initResponse(req,res);\n                if (request.streamed) {\n                    resolve({\n                        stream  : req,\n                        status  : res.statusCode,\n                        headers : res.headers\n                    })\n                } else {\n\n                    var content = new Buffer(0);\n                    res.on('data', chunk=>content=Buffer.concat([content, chunk], content.length + chunk.length));\n                    res.on('end', ()=>{\n                        try{\n                            response.content = content;\n                            response = this.decode(response);\n                            this.onSuccess(req,response);\n                            resolve(response);\n                        }catch(error){\n                            this.onFailure(req,error);\n                            reject(error);\n                        }\n                    });\n                    res.on('error',error=>{\n                        this.onFailure(req,error);\n                        reject(error);\n                    });\n                }\n            });\n            req.content = this.encode(req) || req.content;\n            if (req.content) {\n                request.end(req.content);\n            } else {\n                request.end();\n            }\n        });\n    }\n}"
  ]
}