{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "/Users/Mamble/Work/Bills/callImitator/http/src",
  "sources": [
    "server.ts"
  ],
  "names": [
    "WsServer",
    "WsServer.constructor",
    "WsServer.create",
    "WsServer.inject",
    "WsServer.newConnection",
    "WsServer.doUpgrade",
    "WsServer.response"
  ],
  "mappings": "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CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,CAAAA,CAACA;oCACbA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,GAACA,IAAIA,GAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,CAACA;gCACrCA,CAACA;4BACLA,CAACA;wBACLA,CAACA;wBACDA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;wBAClBA,MAAMA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,EAACA,OAAOA,CAACA,CAACA;wBACxCA,EAAEA,CAAAA,CAACA,MAAMA,IAAEA,GAAGA,CAACA,CAAAA,CAACA;4BACZA,MAAMA,CAACA,GAAGA,EAAEA,CAAAA;wBAChBA,CAACA;oBACLA,CAAEA;oBAAAA,KAAKA,CAACA,CAACA,EAAEA,CAACA,CAAAA,CAACA;wBACTA,OAAOA,CAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA;oBACrBA,CAACA;gBACLA,CAACA;gBAGLN,eAACA;YAADA,CAACA,AAxED,EAA8B,qBAAY,EAwEzC;YAxED,+BAwEC,CAAA",
  "sourcesContent": [
    "import {Server} from \"node/http\";\nimport {EventEmitter} from \"node/events\";\nimport {IncomingMessage} from \"node/http\";\nimport {WsConnection} from \"./connection\";\n\nimport * as HTTP from \"node/http\";\n\nexport class WsServer extends EventEmitter{\n\n    static create(server:Server,protocol:string):WsServer{\n        return this.inject(HTTP.createServer(),protocol);\n    }\n    static inject(server:Server,protocol:string):WsServer{\n        return new WsServer(server,protocol);\n    }\n\n    public protocol : string;\n    public connections : {[id:string]:WsConnection};\n\n    constructor(server:Server,protocol:string){\n        super();\n        this.protocol = protocol;\n        this.connections = {};\n        server.on('upgrade',(req:IncomingMessage)=>{\n            this.doUpgrade(req);\n        })\n    }\n    protected newConnection():WsConnection{\n       return new WsConnection(true);\n    }\n    protected doUpgrade(req:IncomingMessage){\n        var upgrade:string = String(req.headers['upgrade']).trim().toLowerCase();\n        if(upgrade && upgrade == 'websocket') {\n            var connection = this.newConnection();\n            try{\n                if(connection.accept(req,this.protocol)){\n                    this.response(req.socket,101,'Switching Protocols',{\n                        'Connection'                : 'Upgrade',\n                        'Upgrade'                   : 'websocket',\n                        'Sec-WebSocket-Accept'      : connection.hash,\n                        'Sec-WebSocket-Protocol'    : this.protocol\n                    });\n                    connection.on('close',()=>{\n                        delete this.connections[connection.id];\n                        this.emit('disconnect', connection);\n                    });\n                    this.connections[connection.id]=connection;\n                    this.emit('connect', connection);\n                }\n            }catch(e){\n                console.info(e.stack);\n                this.response(req.socket,e.code,e.message);\n            }\n        }\n    }\n\n    private response(socket,status:number,message:string,headers?:any,body?){\n        try {\n            status = status || 500;\n            message = message||'Unknown Server Error';\n            var data = [`HTTP/1.1 ${status} ${message}`];\n            if(headers){\n                for(var key in headers){\n                    if(headers[key]){\n                        data.push(key+': '+headers[key]);\n                    }\n                }\n            }\n            data.push('\\r\\n');\n            socket.write(data.join('\\r\\n'),'ascii');\n            if(status!=101){\n                socket.end()\n            }\n        } catch (ex){\n            console.info(ex);\n        }\n    }\n\n\n}"
  ]
}