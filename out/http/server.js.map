{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "/Users/Mamble/Work/Bills/callImitator/http/src",
  "sources": [
    "server.ts"
  ],
  "names": [
    "Server",
    "Server.constructor",
    "Server.initResponse",
    "Server.initRequest",
    "Server.handler",
    "Server.start",
    "Server.doRequest"
  ],
  "mappings": "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AACA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAAAA,CAACA;gCACdA,EAAEA,CAAAA,CAACA,OAAOA,OAAOA,CAACA,MAAMA,IAAEA,UAAUA,CAACA,CAAAA,CAACA;oCAClCA,MAAMA,CAACA,OAAOA,CAACA,MAAMA,CAACA,GAAGA,EAACA,GAAGA,CAACA,CAACA;gCACnCA,CAACA;4BACLA,CAACA;4BAAAA,IAAIA,CAAAA,CAACA;gCACFA,MAAMA,CAACA,IAAIA,CAACA;4BAChBA,CAACA;wBACLA,CAACA,CAACA,CAACA;oBACPA,CAACA,CAACA,CAACA;oBACHA,KAAKA,CAACA,IAAIA,CACNA,UAAAA,CAACA;wBACDA,EAAEA,CAAAA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAAAA,CAACA;4BACXA,GAAGA,CAACA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;wBACzBA,CAACA;wBAAAA,IAAIA,CAAAA,CAACA;4BACFA,GAAGA,CAACA,GAAGA,EAAEA,CAAAA;wBACbA,CAACA;oBACLA,CAACA,EACGA,UAAAA,CAACA;wBACDA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA;wBACvBA,GAAGA,CAACA,SAASA,CAACA,GAAGA,EAACA;4BACdA,cAAcA,EAAEA,YAAYA;yBAC/BA,CAACA,CAACA;wBACHA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA;oBACrBA,CAACA,CACAA,CAACA;oBACFA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBA3EMN,eAAQA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA;gBA4E1CA,aAACA;YAADA,CAACA,AAlFD,IAkFC;YAlFD,2BAkFC,CAAA",
  "sourcesContent": [
    "import Node from './node';\n\nexport class Server {\n\n    static initResponse(res) {\n    }\n    static initRequest(req) {\n    }\n    static handlers = Object.create(null);\n    static handler(name){\n        return handler=>{\n            Object.defineProperty(Server.handlers,name,<PropertyDescriptor>{\n                enumerable  : true,\n                value       : handler\n            })\n        }\n    }\n\n    public handlers:any;\n    public config:any;\n    public server:any;\n\n    constructor(config){\n        this.config = config;\n        this.handlers = Object.create(null);\n        this.doRequest = this.doRequest.bind(this);\n    }\n    start(){\n        Object.keys(this.config).forEach(name=>{\n            if(Server.handlers[name]){\n                this.handlers[name] = new (Server.handlers[name].configure(this,this.config[name]))();\n            }\n        });\n        this.server = new Node.Http.Server();\n        this.server.on('request',this.doRequest);\n        this.server.listen(this.config.port,this.config.host);\n        return this;\n    }\n    doRequest(req,res){\n        if(this.config.debug){\n            console.info(req.method,req.url);\n        }\n        Server.initRequest(req);\n        Server.initResponse(res);\n        var chain = new Promise((resolve,reject)=>{\n            var body = new Buffer(0);\n            req.on('data',(chunk)=>{\n                body=Buffer.concat([body,chunk],body.length+chunk.length);\n            });\n            req.on('end',()=>{\n                req.body = body;\n                resolve();\n            });\n        });\n        Object.keys(this.handlers).forEach(name=>{\n            var handler = this.handlers[name];\n            chain = chain.then(()=>{\n                if(!res.finished){\n                    if(typeof handler.handle=='function'){\n                        return handler.handle(req,res);\n                    }\n                }else{\n                    return true;\n                }\n            });\n        });\n        chain.then (\n            s=>{\n            if(res.stream){\n                res.stream.pipe(res);\n            }else{\n                res.end()\n            }\n        },\n            e=>{\n            console.error(e.stack);\n            res.writeHead(500,{\n                'Content-Type': 'text/plain'\n            });\n            res.end(e.stack);\n        }\n        );\n        return chain;\n    }\n}"
  ]
}