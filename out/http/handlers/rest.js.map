{
  "version": 3,
  "file": "rest.js",
  "sourceRoot": "/Users/Mamble/Work/Bills/callImitator/http/src",
  "sources": [
    "rest.ts"
  ],
  "names": [
    "RestRoute",
    "RestRoute.constructor",
    "RestRoute.match",
    "RestRoute.toJSON",
    "RestRoute.toString",
    "RestHandler",
    "RestHandler.constructor",
    "RestHandler.register",
    "RestHandler.accept",
    "RestHandler.handle"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import Node from '../node';\nimport {Server} from '../server';\nimport {Mime} from '../mime';\nimport {Handler} from './handler';\nimport {Result} from '../rest';\n\nexport class RestRoute {\n    static methods = ['GET','POST','PUT','PATCH','DELETE','HEAD'];\n\n    public resource:any;\n    public action:any;\n    private method:any;\n    private path:any;\n    private params:any;\n    private regexp:any;\n\n    constructor(resource,action,path){\n        this.resource = resource;\n        this.action = action;\n        this.method = action.toUpperCase();\n        this.path   = path;\n        this.params = [];\n        this.regexp = [];\n        path.split('/').forEach(part=>{\n            if(part[0]==':'){\n                this.params.push(part.substring(1));\n                this.regexp.push('([^\\\\/]+)');\n            }else\n            if(part[0]=='*'){\n                this.params.push(part.substring(1));\n                this.regexp.push('(.*)');\n            }else{\n                this.regexp.push(part);\n            }\n        });\n        this.regexp = new RegExp('^'+this.method+'\\\\s+'+this.regexp.join('\\\\/').toLowerCase()+'$');\n    }\n    match(path){\n        return path.match(this.regexp);\n    }\n    toJSON(){\n        return {\n            method    : this.method,\n            path      : this.path,\n            resource  : this.resource.name+'.'+this.action,\n            params    : this.params,\n            regexp    : this.regexp.toString()\n        }\n    }\n    toString(){\n        return 'Route('+this.regexp.toString()+')';\n    }\n}\n\n@Server.handler('rest')\nexport class RestHandler extends Handler {\n    static routes = {};\n    static register(path,resource){\n        Object.getOwnPropertyNames(resource.prototype).forEach(method=>{\n            if(RestRoute.methods.indexOf(method.toUpperCase())>=0){\n                var route = new RestRoute(resource,method,path);\n                var routeId = route.toString();\n                if(!this.routes[routeId]){\n                    this.routes[routeId] = route;\n                }else{\n                    route = this.routes[routeId];\n                    throw new Error(`Cant route '${method.toUpperCase()} ${method.toUpperCase()}' to ${path}.${resource.name} it's already bounded to ${method}.${route.resource.name}`);\n                }\n            }\n        });\n    }\n\n    private config:any;\n\n    constructor(){\n        super();\n        this.config = RestHandler.config;\n    }\n    accept(req,res){\n\n    }\n    handle(req,res){\n        var url = Node.Url.parse(req.url,true);\n        var root = this.config.path;\n        var method = req.method.toUpperCase();\n        var headers = req.headers;\n        var query = url.query;\n        if(url.pathname==root){\n            res.writeHead(200,{\n                'Content-Type': 'application/json'\n            });\n            res.end(JSON.stringify({\n                routes:RestHandler.routes,\n                config:RestHandler.config\n            }));\n        } else\n        if(url.pathname.indexOf(root)==0){\n            var route,matched,path = method+' '+url.pathname.replace(root,'').toLowerCase();\n\n            for(var r in RestHandler.routes){\n                route = RestHandler.routes[r];\n                if(matched = route.match(path)){\n                    break;\n                }\n            }\n            if(matched){\n                matched.shift();\n                var match = route.toJSON();\n                match.params = {};\n                match.query = query;\n                match.headers = headers;\n                route.params.forEach((p,i)=>{\n                    match.params[p] = matched[i];\n                });\n                var resource = new route.resource();\n                //resource.path = match.params;\n                //resource.method = match.params;\n                //resource.params = match.params;\n\n                var promise = Promise.resolve(\n                    (req.body&&req.body.length)\n                        ?JSON.parse(req.body.toString())\n                        :null\n                );\n                promise = promise.then(body=>{\n                    resource.headers = match.headers;\n                    resource.query = match.query;\n                    resource.params = match.params;\n                    if(body){\n                        matched.push(body);\n                    }\n                    return route.resource.prototype[route.action].apply(resource,matched);\n                });\n\n                promise = promise.then(result=>{\n                    if(result == null || typeof result == 'undefined'){\n                        return Result.create({\n                            error   : 'Resource Not Found',\n                            code    : 404\n                        },404);\n                    }\n                    if(result instanceof Result){\n                        return result;\n                    }else{\n                        return Result.create(JSON.stringify(result,null,'  '),200,{\n                            'Content-Type': 'application/json'\n                        });\n                    }\n                });\n                promise = promise.catch(result=>{\n                    if(result == null || typeof result == 'undefined'){\n                        return Result.create({\n                            error   : 'Resource Not Found',\n                            code    : 404\n                        },404);\n                    }\n                    if(result instanceof Result){\n                        return result;\n                    }else\n                    if(result instanceof Error){\n                        return Result.create({\n                            error   : result.message,\n                            code    : result.code||500,\n                            details : result.details,\n                            stack   : result.stack.split(\"\\n\")\n                        },500);\n                    }else{\n                        return Result.create({\n                            error   : 'Unknown Server Error',\n                            code    : 500,\n                            data    : result\n                        },500);\n                    }\n                });\n                promise = promise.then(result=>{\n                    res.writeHead(result.status,result.headers);\n                    if(result.value){\n                        if(typeof result.value!=\"string\"){\n                            res.end(JSON.stringify(result.value));\n                        }else{\n                            res.end(result.value);\n                        }\n                    }else{\n                        res.end();\n                    }\n\n                });\n\n                return promise;\n            }else{\n               // console.info(path,res);\n                res.writeHead(404,{\n                    'Content-Type': 'application/json'\n                });\n                res.end(JSON.stringify({\n                    error   : 'Invalid Resource',\n                    code    : 404\n                }));\n            }\n\n        }\n    }\n}\n\n"
  ]
}