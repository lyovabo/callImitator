{
  "version": 3,
  "file": "files.js",
  "sourceRoot": "/Users/Mamble/Work/Bills/callImitator/http/src",
  "sources": [
    "files.ts"
  ],
  "names": [
    "FileRoute",
    "FileRoute.constructor",
    "FileRoute.match",
    "FileRoute.toString",
    "FileHandler",
    "FileHandler.constructor",
    "FileHandler.resource",
    "FileHandler.accept",
    "FileHandler.handle"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAGIA,mBAAYA,QAAQA;oBAChBC,EAAEA,CAAAA,CAACA,OAAOA,QAAQA,IAAEA,QAAQA,CAACA,CAAAA,CAACA;wBAC1BA,QAAQA,GAAGA,CAACA,WAAWA,EAACA,CAAGA,QAAQA,SAAKA,CAACA,CAACA;oBAC9CA,CAACA;oBACDA,IAAIA,CAACA,OAAOA,GAAGA,QAAQA,CAACA,KAAKA,EAAEA,CAACA;oBAChCA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA,KAAKA,EAAEA,CAACA;gBACrCA,CAACA;gBACDD,yBAAKA,GAALA,UAAMA,GAAGA;oBACLE,EAAEA,CAAAA,CAACA,GAAGA,CAACA,KAAKA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA,CAAAA,CAACA;wBACxBA,MAAMA,CAACA,GAAGA,CAACA,OAAOA,CAACA,IAAIA,CAACA,OAAOA,EAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBACnDA,CAACA;gBACLA,CAACA;gBACDF,4BAAQA,GAARA;oBACIG,MAAMA,CAACA,WAASA,IAAIA,CAACA,OAAOA,YAAOA,IAAIA,CAACA,QAAQA,MAAGA,CAAAA;gBACvDA,CAACA;gBACLH,gBAACA;YAADA,CAACA,AAlBD,IAkBC;YACD;gBAC0BI,+BAAOA;gBAG7BA;oBAJJC,iBAqDCA;oBAhDOA,iBAAOA,CAACA;oBACRA,IAAIA,CAACA,MAAMA,GAAGA,WAAWA,CAACA,MAAMA,CAACA;oBACjCA,IAAIA,CAACA,MAAMA,GAAGA,EAAEA,CAACA;oBACjBA,EAAEA,CAAAA,CAACA,OAAOA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,IAAEA,QAAQA,CAACA,CAAAA,CAACA;wBAClCA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,GAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,CAACA;oBACxCA,CAACA;oBACDA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,UAAAA,CAACA;wBACtBA,KAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,SAASA,CAACA,CAACA,CAACA,CAACA,CAACA;oBACvCA,CAACA,CAACA,CAACA;gBACPA,CAACA;gBACDD,8BAAQA,GAARA,UAASA,IAAIA;oBACTE,IAAIA,CAACA;wBACDA,IAAIA,IAAIA,GAAGA,cAAIA,CAACA,EAAEA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA;wBAClCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,CAACA,CAACA,CAACA;4BACrBA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,cAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,EAAEA,YAAYA,CAACA,CAACA,CAACA;wBAChEA,CAACA;wBAACA,IAAIA,CACNA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,CAACA,CAACA;4BAChBA,MAAMA,CAACA,EAACA,KAAKA,EAACA,IAAIA,EAACA,IAAIA,EAACA,IAAIA,EAACA,CAACA;wBAClCA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACJA,MAAMA,CAACA,EAACA,KAAKA,EAACA,KAAKA,EAACA,IAAIA,EAACA,IAAIA,EAACA,CAACA;wBACnCA,CAACA;oBACLA,CAACA;oBAAAA,KAAKA,CAAAA,CAACA,CAACA,CAACA,CAAAA,CAACA;wBACNA,MAAMA,CAACA,EAACA,KAAKA,EAACA,KAAKA,EAACA,IAAIA,EAACA,IAAIA,EAACA,CAACA;oBACnCA,CAACA;gBACLA,CAACA;gBACDF,4BAAMA,GAANA,UAAOA,GAAGA,EAACA,GAAGA;gBAEdG,CAACA;gBACDH,4BAAMA,GAANA,UAAOA,GAAGA,EAACA,GAAGA;oBACVI,GAAGA,CAAAA,CAACA,GAAGA,CAACA,IAAIA,EAACA,CAACA,GAACA,CAACA,EAACA,CAACA,GAACA,IAAIA,CAACA,MAAMA,CAACA,MAAMA,EAACA,CAACA,EAAEA,EAACA,CAACA;wBACvCA,IAAIA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA;wBACrCA,EAAEA,CAAAA,CAACA,IAAIA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAAAA,CAACA;4BAC3CA,KAAKA,CAACA;wBACVA,CAACA;oBACLA,CAACA;oBAEDA,EAAEA,CAAAA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,KAAKA,CAACA,CAAAA,CAACA;wBACnBA,GAAGA,CAACA,SAASA,CAACA,GAAGA,EAACA;4BACdA,cAAcA,EAAEA,WAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,IAAIA,CAACA;yBAC1CA,CAACA,CAACA;wBACHA,GAAGA,CAACA,MAAMA,GAAGA,cAAIA,CAACA,EAAEA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;oBACrDA,CAACA;oBAAAA,IAAIA,CAAAA,CAACA;wBACFA,GAAGA,CAACA,SAASA,CAACA,GAAGA,EAACA;4BACdA,cAAcA,EAAEA,WAAIA,CAACA,OAAOA,CAACA,IAAIA,GAACA,IAAIA,CAACA,IAAIA,GAACA,SAASA,CAACA;yBACzDA,CAACA,CAACA;wBACHA,GAAGA,CAACA,GAAGA,CAACA,gBAAgBA,CAACA,CAACA;oBAC9BA,CAACA;gBACLA,CAACA;gBApDLJ;oBAACA,eAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA;;gCAqDvBA;gBAADA,kBAACA;YAADA,CAACA,AArDD,EAC0B,iBAAO,EAoDhC",
  "sourcesContent": [
    "import Node from '../node';\n\nimport {Server} from '../server';\nimport {Mime} from '../mime';\nimport {Handler} from './handler';\n\nclass FileRoute {\n    private pattern:any;\n    private location:any;\n    constructor(settings){\n        if(typeof settings=='string'){\n            settings = [/^\\/(.*)$/i,`${settings}/$1`];\n        }\n        this.pattern = settings.shift();\n        this.location = settings.shift();\n    }\n    match(url){\n        if(url.match(this.pattern)){\n            return url.replace(this.pattern,this.location);\n        }\n    }\n    toString(){\n        return `Route(${this.pattern} -> ${this.location})`\n    }\n}\n@Server.handler('files')\nclass FileHandler extends Handler {\n    config:any;\n    routes:any;\n    constructor(){\n        super();\n        this.config = FileHandler.config;\n        this.routes = [];\n        if(typeof this.config.path=='string'){\n            this.config.path=[this.config.path];\n        }\n        this.config.path.forEach(p=>{\n            this.routes.push(new FileRoute(p));\n        });\n    }\n    resource(path){\n        try {\n            var stat = Node.Fs.statSync(path);\n            if (stat.isDirectory()) {\n                return this.resource(Node.Path.resolve(path, 'index.html'));\n            } else\n            if (stat.isFile()) {\n                return {exist:true,path:path};\n            } else {\n                return {exist:false,path:path};\n            }\n        }catch(e){\n            return {exist:false,path:path};\n        }\n    }\n    accept(req,res){\n\n    }\n    handle(req,res){\n        for(var file,i=0;i<this.routes.length;i++){\n            file = this.routes[i].match(req.url);\n            if(file && (file = this.resource(file)).exist){\n                break;\n            }\n        }\n\n        if(file && file.exist){\n            res.writeHead(200,{\n                'Content-Type': Mime.getType(file.path)\n            });\n            res.stream = Node.Fs.createReadStream(file.path);\n        }else{\n            res.writeHead(404,{\n                'Content-Type': Mime.getType(file?file.path:'req.url')\n            });\n            res.end('File Not Found');\n        }\n    }\n}"
  ]
}