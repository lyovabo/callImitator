import Definition = Reflect.Definition;
import Method = Reflect.Method;
import Module = Reflect.Module;
import Class = Reflect.Class;
import Field = Reflect.Field;
export declare class MangularModule {
    static loadCss(url: any): void;
    static getClassFunction(clazz: Class, modifier?: (instance: any) => any): Function;
    static getMethodFunction(method: Method): Function;
    static getFieldValue(field: Field): any;
    static run(main: string, angular: any): void;
    static get(def: Definition): MangularModule;
    private name;
    private module;
    private configs;
    private services;
    private providers;
    private controllers;
    private components;
    private directives;
    private filters;
    private runs;
    private constants;
    private factories;
    private values;
    private dependencies;
    private initialized;
    constructor(module: Module);
    addConfig(def: Definition): void;
    addFactory(def: Definition): void;
    addRun(def: Definition): void;
    addProvider(def: Definition): void;
    addService(def: Definition): void;
    addController(def: Definition): void;
    addDirective(def: Definition): void;
    addComponent(def: Definition): void;
    addFilter(def: Definition): void;
    addValue(def: Definition): void;
    addConst(def: Definition): void;
    create(angular: any): any;
    init(angular: any): void;
    private initConfig(module, service);
    private initRun(module, service);
    private initConst(module, service);
    private initValue(module, service);
    private initProvider(module, service);
    private initFactory(module, service);
    private initService(module, service);
    private initController(module, service);
    private initDirective(module, service);
    private initComponent(module, service);
    private initFilter(module, service);
    run(angular: any): void;
}
